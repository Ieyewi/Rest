--[[ Test ]]
print("Hello")

--[[ Loadstring ]]
local mercuryLib = game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua")
local mercurySuccess, mercuryError = pcall(loadstring(mercuryLib))
if not mercurySuccess then
    print("Error loading Mercury library: " .. tostring(mercuryError))
else

--[[ Library ]]
local Mercury = mercuryError

--[[ Gui ]]
local MainGUI = Mercury:Create{
    Name = "Mercury",
    Size = UDim2.fromOffset(600, 400),
    Theme = Mercury.Themes.Dark,
     Link = "https://github.com/philissmart/Mercury-lib",
     Draggable = true
}

--[[ Make the GUI draggable on mobile devices ]]
 local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end

    --[[ Tabs ]]
    local MainTab = MainGUI:Tab{
        Name = "New Tab",
        Icon = "rbxassetid://8569322835"
    }

    --[[ Buttons]]
    MainTab:AddButton{
        Name = "Fly Gui",
        Callback = function()
            local flyGuiScript = game:HttpGet("https://pastebin.com/raw/gNb0mYab")
            local flyGuiSuccess, flyGuiError = pcall(loadstring(flyGuiScript))
            if not flyGuiSuccess then
                print("Error loading Fly Gui script: " .. tostring(flyGuiError))
            else
                print("Button pressed")
            end
        end    
    }
end
